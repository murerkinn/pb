{"id":"pot/Log/LogModel.js","dependencies":[{"name":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\package.json","includedInParent":true,"mtime":1604092055811},{"name":"../pot/PotModel","loc":{"line":22,"column":21},"parent":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\pot\\Log\\LogModel.js","resolved":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\pot\\pot\\PotModel.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _PotModel2 = _interopRequireDefault(require(\"../pot/PotModel\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\r\n * Log model provides a potentiometer behavior similar to real world logarithmic potentiometers.\r\n *\r\n * @extends {PotModel}\r\n */\nvar LogModel = /*#__PURE__*/function (_PotModel) {\n  _inherits(LogModel, _PotModel);\n\n  var _super = _createSuper(LogModel);\n\n  function LogModel() {\n    _classCallCheck(this, LogModel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LogModel, [{\n    key: \"processValue\",\n\n    /**\r\n     * @override\r\n     */\n    value: function processValue(newValue, oldValue) {\n      newValue = Math.pow(newValue, 3.3);\n\n      _get(_getPrototypeOf(LogModel.prototype), \"processValue\", this).call(this, newValue, oldValue);\n    }\n    /**\r\n     * @override\r\n     */\n\n  }, {\n    key: \"getNormalizedValue\",\n    value: function getNormalizedValue() {\n      var rv = _get(_getPrototypeOf(LogModel.prototype), \"getNormalizedValue\", this).call(this);\n\n      rv = Math.pow(rv, 1 / 3.3);\n      return rv;\n    }\n  }]);\n\n  return LogModel;\n}(_PotModel2.default);\n\nexports.default = LogModel;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"pot/Log/LogModel.js","original":{"line":22,"column":0}},{"generated":{"line":38,"column":0},"source":"pot/Log/LogModel.js","original":{"line":25,"column":0}},{"generated":{"line":39,"column":0},"source":"pot/Log/LogModel.js","original":{"line":26,"column":0}},{"generated":{"line":40,"column":0},"source":"pot/Log/LogModel.js","original":{"line":27,"column":0}},{"generated":{"line":41,"column":0},"source":"pot/Log/LogModel.js","original":{"line":28,"column":0}},{"generated":{"line":42,"column":0},"source":"pot/Log/LogModel.js","original":{"line":29,"column":0}},{"name":"LogModel","generated":{"line":43,"column":4},"source":"pot/Log/LogModel.js","original":{"line":30,"column":21}},{"generated":{"line":57,"column":0},"source":"pot/Log/LogModel.js","original":{"line":32,"column":4}},{"generated":{"line":58,"column":0},"source":"pot/Log/LogModel.js","original":{"line":33,"column":0}},{"generated":{"line":59,"column":0},"source":"pot/Log/LogModel.js","original":{"line":34,"column":0}},{"name":"newValue","generated":{"line":60,"column":33},"source":"pot/Log/LogModel.js","original":{"line":35,"column":17}},{"name":"oldValue","generated":{"line":60,"column":43},"source":"pot/Log/LogModel.js","original":{"line":35,"column":27}},{"generated":{"line":60,"column":53},"source":"pot/Log/LogModel.js","original":{"line":35,"column":37}},{"name":"newValue","generated":{"line":61,"column":0},"source":"pot/Log/LogModel.js","original":{"line":36,"column":8}},{"name":"newValue","generated":{"line":61,"column":6},"source":"pot/Log/LogModel.js","original":{"line":36,"column":8}},{"generated":{"line":61,"column":14},"source":"pot/Log/LogModel.js","original":{"line":36,"column":16}},{"name":"Math","generated":{"line":61,"column":17},"source":"pot/Log/LogModel.js","original":{"line":36,"column":19}},{"generated":{"line":61,"column":21},"source":"pot/Log/LogModel.js","original":{"line":36,"column":23}},{"name":"pow","generated":{"line":61,"column":22},"source":"pot/Log/LogModel.js","original":{"line":36,"column":24}},{"generated":{"line":61,"column":25},"source":"pot/Log/LogModel.js","original":{"line":36,"column":19}},{"name":"newValue","generated":{"line":61,"column":26},"source":"pot/Log/LogModel.js","original":{"line":36,"column":28}},{"generated":{"line":61,"column":34},"source":"pot/Log/LogModel.js","original":{"line":36,"column":19}},{"generated":{"line":61,"column":36},"source":"pot/Log/LogModel.js","original":{"line":36,"column":38}},{"generated":{"line":61,"column":39},"source":"pot/Log/LogModel.js","original":{"line":36,"column":19}},{"generated":{"line":61,"column":40},"source":"pot/Log/LogModel.js","original":{"line":36,"column":8}},{"generated":{"line":63,"column":0},"source":"pot/Log/LogModel.js","original":{"line":37,"column":8}},{"name":"newValue","generated":{"line":63,"column":81},"source":"pot/Log/LogModel.js","original":{"line":37,"column":27}},{"generated":{"line":63,"column":89},"source":"pot/Log/LogModel.js","original":{"line":37,"column":8}},{"name":"oldValue","generated":{"line":63,"column":91},"source":"pot/Log/LogModel.js","original":{"line":37,"column":37}},{"generated":{"line":63,"column":99},"source":"pot/Log/LogModel.js","original":{"line":37,"column":8}},{"generated":{"line":64,"column":0},"source":"pot/Log/LogModel.js","original":{"line":38,"column":5}},{"generated":{"line":65,"column":0},"source":"pot/Log/LogModel.js","original":{"line":40,"column":4}},{"generated":{"line":66,"column":0},"source":"pot/Log/LogModel.js","original":{"line":41,"column":0}},{"generated":{"line":67,"column":0},"source":"pot/Log/LogModel.js","original":{"line":42,"column":0}},{"generated":{"line":71,"column":41},"source":"pot/Log/LogModel.js","original":{"line":43,"column":25}},{"generated":{"line":72,"column":0},"source":"pot/Log/LogModel.js","original":{"line":44,"column":8}},{"name":"rv","generated":{"line":72,"column":10},"source":"pot/Log/LogModel.js","original":{"line":44,"column":12}},{"generated":{"line":72,"column":12},"source":"pot/Log/LogModel.js","original":{"line":44,"column":14}},{"generated":{"line":72,"column":95},"source":"pot/Log/LogModel.js","original":{"line":44,"column":8}},{"name":"rv","generated":{"line":74,"column":0},"source":"pot/Log/LogModel.js","original":{"line":45,"column":8}},{"name":"rv","generated":{"line":74,"column":6},"source":"pot/Log/LogModel.js","original":{"line":45,"column":8}},{"generated":{"line":74,"column":8},"source":"pot/Log/LogModel.js","original":{"line":45,"column":10}},{"name":"Math","generated":{"line":74,"column":11},"source":"pot/Log/LogModel.js","original":{"line":45,"column":13}},{"generated":{"line":74,"column":15},"source":"pot/Log/LogModel.js","original":{"line":45,"column":17}},{"name":"pow","generated":{"line":74,"column":16},"source":"pot/Log/LogModel.js","original":{"line":45,"column":18}},{"generated":{"line":74,"column":19},"source":"pot/Log/LogModel.js","original":{"line":45,"column":13}},{"name":"rv","generated":{"line":74,"column":20},"source":"pot/Log/LogModel.js","original":{"line":45,"column":22}},{"generated":{"line":74,"column":22},"source":"pot/Log/LogModel.js","original":{"line":45,"column":13}},{"generated":{"line":74,"column":24},"source":"pot/Log/LogModel.js","original":{"line":45,"column":26}},{"generated":{"line":74,"column":28},"source":"pot/Log/LogModel.js","original":{"line":45,"column":28}},{"generated":{"line":74,"column":31},"source":"pot/Log/LogModel.js","original":{"line":45,"column":13}},{"generated":{"line":74,"column":32},"source":"pot/Log/LogModel.js","original":{"line":45,"column":8}},{"generated":{"line":75,"column":0},"source":"pot/Log/LogModel.js","original":{"line":46,"column":8}},{"name":"rv","generated":{"line":75,"column":13},"source":"pot/Log/LogModel.js","original":{"line":46,"column":15}},{"generated":{"line":75,"column":15},"source":"pot/Log/LogModel.js","original":{"line":46,"column":8}},{"generated":{"line":76,"column":0},"source":"pot/Log/LogModel.js","original":{"line":47,"column":5}},{"name":"PotModel","generated":{"line":80,"column":2},"source":"pot/Log/LogModel.js","original":{"line":30,"column":38}}],"sources":{"pot/Log/LogModel.js":"// Copyright 2020 Armagan Amcalar. All Rights Reserved.\r\n//\r\n// This file is part of Pedalboard.js.\r\n//\r\n// Pedalboard.js is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Pedalboard.js is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Pedalboard.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @fileoverview Linear pot component model.\r\n */\r\n\r\nimport PotModel from \"../pot/PotModel\";\r\n\r\n\r\n/**\r\n * Log model provides a potentiometer behavior similar to real world logarithmic potentiometers.\r\n *\r\n * @extends {PotModel}\r\n */\r\nexport default class LogModel extends PotModel {\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    processValue(newValue, oldValue) {\r\n        newValue = Math.pow(newValue, 3.3);\r\n        super.processValue(newValue, oldValue);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    getNormalizedValue() {\r\n        let rv = super.getNormalizedValue();\r\n        rv = Math.pow(rv, 1/3.3);\r\n        return rv;\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"8cb59bd6cd6b122c00ee2bd479e27604","cacheData":{"env":{}}}