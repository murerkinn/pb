{"id":"pot/Linear/Linear.js","dependencies":[{"name":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\package.json","includedInParent":true,"mtime":1604092055811},{"name":"./LinearModel","loc":{"line":22,"column":24},"parent":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\pot\\Linear\\Linear.js","resolved":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\pot\\Linear\\LinearModel.js"},{"name":"../pot/Pot","loc":{"line":23,"column":16},"parent":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\pot\\Linear\\Linear.js","resolved":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\pot\\pot\\Pot.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _LinearModel = _interopRequireDefault(require(\"./LinearModel\"));\n\nvar _Pot2 = _interopRequireDefault(require(\"../pot/Pot\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\r\n * Linear pot component models a linear potentiometer.\r\n *\r\n * @extends {Pot}\r\n */\nvar Linear = /*#__PURE__*/function (_Pot) {\n  _inherits(Linear, _Pot);\n\n  var _super = _createSuper(Linear);\n\n  /**\r\n   * \r\n   * @param {AudioParam|Function} param Audio parameter this pot will adjust. Can be gain, etc. If more complex\r\n   *     calculation is desired, one can pass a callback function which will be triggered each time the value of this pot\r\n   *     changes.\r\n   * @param {string} name Name of the pot. Will be written under it.\r\n   * @param {number} multiplier The multiplier of the effect. Some effects (such as gain) need this to be on the order of\r\n   *                       thousands.\r\n   * @param {string=} opt_size Size of the pot. Might be one of the values in pb.pot.Pot.Size enum. Default is REGULAR.\r\n   *     This size is added to the pot's class names for easier styling.\r\n   * @param {number=} opt_max Optional minimum value for the pot. Default value is 0.\r\n   * @param {number=} opt_min Optional maximum value for the pot. Default value is 1.\r\n   * @param {number=} opt_default Optional default value for the pot. Default value is 0.5.\r\n   */\n  function Linear(param, name, multiplier, opt_size, opt_min, opt_max, opt_default) {\n    var _this;\n\n    _classCallCheck(this, Linear);\n\n    _this = _super.call(this, param, name, multiplier, opt_size, opt_min, opt_max, opt_default);\n    _this.modelClass = _LinearModel.default;\n    return _this;\n  }\n\n  return Linear;\n}(_Pot2.default);\n\nexports.default = Linear;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"pot/Linear/Linear.js","original":{"line":22,"column":0}},{"generated":{"line":10,"column":0},"source":"pot/Linear/Linear.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"pot/Linear/Linear.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"pot/Linear/Linear.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"pot/Linear/Linear.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"pot/Linear/Linear.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"pot/Linear/Linear.js","original":{"line":30,"column":0}},{"name":"Linear","generated":{"line":37,"column":4},"source":"pot/Linear/Linear.js","original":{"line":31,"column":21}},{"generated":{"line":42,"column":0},"source":"pot/Linear/Linear.js","original":{"line":32,"column":4}},{"generated":{"line":43,"column":0},"source":"pot/Linear/Linear.js","original":{"line":33,"column":0}},{"generated":{"line":44,"column":0},"source":"pot/Linear/Linear.js","original":{"line":34,"column":0}},{"generated":{"line":45,"column":0},"source":"pot/Linear/Linear.js","original":{"line":35,"column":0}},{"generated":{"line":46,"column":0},"source":"pot/Linear/Linear.js","original":{"line":36,"column":0}},{"generated":{"line":47,"column":0},"source":"pot/Linear/Linear.js","original":{"line":37,"column":0}},{"generated":{"line":48,"column":0},"source":"pot/Linear/Linear.js","original":{"line":38,"column":0}},{"generated":{"line":49,"column":0},"source":"pot/Linear/Linear.js","original":{"line":39,"column":0}},{"generated":{"line":50,"column":0},"source":"pot/Linear/Linear.js","original":{"line":40,"column":0}},{"generated":{"line":51,"column":0},"source":"pot/Linear/Linear.js","original":{"line":41,"column":0}},{"generated":{"line":52,"column":0},"source":"pot/Linear/Linear.js","original":{"line":42,"column":0}},{"generated":{"line":53,"column":0},"source":"pot/Linear/Linear.js","original":{"line":43,"column":0}},{"generated":{"line":54,"column":0},"source":"pot/Linear/Linear.js","original":{"line":44,"column":0}},{"generated":{"line":55,"column":0},"source":"pot/Linear/Linear.js","original":{"line":45,"column":0}},{"generated":{"line":56,"column":0},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"param","generated":{"line":56,"column":18},"source":"pot/Linear/Linear.js","original":{"line":46,"column":16}},{"generated":{"line":56,"column":23},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"name","generated":{"line":56,"column":25},"source":"pot/Linear/Linear.js","original":{"line":46,"column":23}},{"generated":{"line":56,"column":29},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"multiplier","generated":{"line":56,"column":31},"source":"pot/Linear/Linear.js","original":{"line":46,"column":29}},{"generated":{"line":56,"column":41},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"opt_size","generated":{"line":56,"column":43},"source":"pot/Linear/Linear.js","original":{"line":46,"column":41}},{"generated":{"line":56,"column":51},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"opt_min","generated":{"line":56,"column":53},"source":"pot/Linear/Linear.js","original":{"line":46,"column":51}},{"generated":{"line":56,"column":60},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"opt_max","generated":{"line":56,"column":62},"source":"pot/Linear/Linear.js","original":{"line":46,"column":60}},{"generated":{"line":56,"column":69},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"name":"opt_default","generated":{"line":56,"column":71},"source":"pot/Linear/Linear.js","original":{"line":46,"column":69}},{"generated":{"line":56,"column":82},"source":"pot/Linear/Linear.js","original":{"line":46,"column":4}},{"generated":{"line":56,"column":84},"source":"pot/Linear/Linear.js","original":{"line":46,"column":82}},{"generated":{"line":57,"column":0},"source":"pot/Linear/Linear.js","original":{"line":46,"column":82}},{"generated":{"line":59,"column":0},"source":"pot/Linear/Linear.js","original":{"line":46,"column":82}},{"generated":{"line":61,"column":0},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"param","generated":{"line":61,"column":30},"source":"pot/Linear/Linear.js","original":{"line":47,"column":14}},{"generated":{"line":61,"column":35},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"name","generated":{"line":61,"column":37},"source":"pot/Linear/Linear.js","original":{"line":47,"column":21}},{"generated":{"line":61,"column":41},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"multiplier","generated":{"line":61,"column":43},"source":"pot/Linear/Linear.js","original":{"line":47,"column":27}},{"generated":{"line":61,"column":53},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"opt_size","generated":{"line":61,"column":55},"source":"pot/Linear/Linear.js","original":{"line":47,"column":39}},{"generated":{"line":61,"column":63},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"opt_min","generated":{"line":61,"column":65},"source":"pot/Linear/Linear.js","original":{"line":47,"column":49}},{"generated":{"line":61,"column":72},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"opt_max","generated":{"line":61,"column":74},"source":"pot/Linear/Linear.js","original":{"line":47,"column":58}},{"generated":{"line":61,"column":81},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"name":"opt_default","generated":{"line":61,"column":83},"source":"pot/Linear/Linear.js","original":{"line":47,"column":67}},{"generated":{"line":61,"column":94},"source":"pot/Linear/Linear.js","original":{"line":47,"column":8}},{"generated":{"line":62,"column":0},"source":"pot/Linear/Linear.js","original":{"line":48,"column":8}},{"name":"modelClass","generated":{"line":62,"column":10},"source":"pot/Linear/Linear.js","original":{"line":48,"column":13}},{"generated":{"line":62,"column":20},"source":"pot/Linear/Linear.js","original":{"line":48,"column":8}},{"name":"LinearModel","generated":{"line":62,"column":23},"source":"pot/Linear/Linear.js","original":{"line":48,"column":26}},{"generated":{"line":62,"column":43},"source":"pot/Linear/Linear.js","original":{"line":48,"column":8}},{"generated":{"line":63,"column":0},"source":"pot/Linear/Linear.js","original":{"line":46,"column":82}},{"generated":{"line":64,"column":0},"source":"pot/Linear/Linear.js","original":{"line":49,"column":5}},{"name":"Pot","generated":{"line":67,"column":2},"source":"pot/Linear/Linear.js","original":{"line":31,"column":36}}],"sources":{"pot/Linear/Linear.js":"// Copyright 2020 Armagan Amcalar. All Rights Reserved.\r\n//\r\n// This file is part of Pedalboard.js.\r\n//\r\n// Pedalboard.js is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Pedalboard.js is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Pedalboard.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @fileoverview Base pot component.\r\n */\r\n\r\nimport LinearModel from \"./LinearModel\";\r\nimport Pot from \"../pot/Pot\";\r\n\r\n\r\n/**\r\n * Linear pot component models a linear potentiometer.\r\n *\r\n * @extends {Pot}\r\n */\r\nexport default class Linear extends Pot {\r\n    /**\r\n     * \r\n     * @param {AudioParam|Function} param Audio parameter this pot will adjust. Can be gain, etc. If more complex\r\n     *     calculation is desired, one can pass a callback function which will be triggered each time the value of this pot\r\n     *     changes.\r\n     * @param {string} name Name of the pot. Will be written under it.\r\n     * @param {number} multiplier The multiplier of the effect. Some effects (such as gain) need this to be on the order of\r\n     *                       thousands.\r\n     * @param {string=} opt_size Size of the pot. Might be one of the values in pb.pot.Pot.Size enum. Default is REGULAR.\r\n     *     This size is added to the pot's class names for easier styling.\r\n     * @param {number=} opt_max Optional minimum value for the pot. Default value is 0.\r\n     * @param {number=} opt_min Optional maximum value for the pot. Default value is 1.\r\n     * @param {number=} opt_default Optional default value for the pot. Default value is 0.5.\r\n     */\r\n    constructor(param, name, multiplier, opt_size, opt_min, opt_max, opt_default) {\r\n        super(param, name, multiplier, opt_size, opt_min, opt_max, opt_default);\r\n        this.modelClass = LinearModel;\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"dab23bf514d835524ed99ab49ca26478","cacheData":{"env":{}}}