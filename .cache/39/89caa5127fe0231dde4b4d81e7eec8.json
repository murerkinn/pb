{"id":"io/Output.js","dependencies":[{"name":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\package.json","includedInParent":true,"mtime":1604092055811},{"name":"../IConnectable","loc":{"line":24,"column":25},"parent":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\io\\Output.js","resolved":"C:\\Users\\mec\\Desktop\\gitprojects\\pb\\src\\IConnectable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _IConnectable = _interopRequireDefault(require(\"../IConnectable\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * The output wrapper for an audio context.\r\n *\r\n * @implements {IConnectable}\r\n */\nvar Output = /*#__PURE__*/function () {\n  /**\r\n   * \r\n   * @param {AudioContext} context Audio context for this output.\r\n   */\n  function Output(context) {\n    _classCallCheck(this, Output);\n\n    this.source = context.destination; // creates a sound source\n\n    this.prev = null;\n  }\n  /**\r\n   * Gets the destination node.\r\n   * @override\r\n   * @return {!(AudioNode|AudioParam)} The final node in the signal chain.\r\n   */\n\n\n  _createClass(Output, [{\n    key: \"getInput\",\n    value: function getInput() {\n      return this.source;\n    }\n    /**\r\n     * Lets the output know who is connected to it.\r\n     * @override\r\n     * @param {IConnectable} prev Input node.\r\n     */\n\n  }, {\n    key: \"setPrev\",\n    value: function setPrev(prev) {\n      this.prev = prev;\n    }\n    /**\r\n     * Dummy method for the Connectable interface. It's meaningless for an output to be connected to another Connectable.\r\n     * It's already the final node in the signal chain.\r\n     * \r\n     * @override\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(destination) {}\n    /**\r\n     * Dummy method for the Connectable interface. It's meaningless for an output to have an output.\r\n     * @override\r\n     */\n\n  }, {\n    key: \"getOutput\",\n    value: function getOutput() {}\n    /**\r\n     * Dummy method for the Connectable interface. The output is never connected to anything else.\r\n     * \r\n     * @override\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {}\n  }]);\n\n  return Output;\n}();\n\nvar _default = Output;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"io/Output.js","original":{"line":24,"column":0}},{"generated":{"line":18,"column":0},"source":"io/Output.js","original":{"line":26,"column":0}},{"generated":{"line":19,"column":0},"source":"io/Output.js","original":{"line":27,"column":0}},{"generated":{"line":20,"column":0},"source":"io/Output.js","original":{"line":28,"column":0}},{"generated":{"line":21,"column":0},"source":"io/Output.js","original":{"line":29,"column":0}},{"generated":{"line":22,"column":0},"source":"io/Output.js","original":{"line":30,"column":0}},{"name":"Output","generated":{"line":23,"column":4},"source":"io/Output.js","original":{"line":31,"column":6}},{"generated":{"line":24,"column":0},"source":"io/Output.js","original":{"line":33,"column":4}},{"generated":{"line":25,"column":0},"source":"io/Output.js","original":{"line":34,"column":0}},{"generated":{"line":26,"column":0},"source":"io/Output.js","original":{"line":35,"column":0}},{"generated":{"line":27,"column":0},"source":"io/Output.js","original":{"line":36,"column":0}},{"generated":{"line":28,"column":0},"source":"io/Output.js","original":{"line":37,"column":4}},{"name":"context","generated":{"line":28,"column":18},"source":"io/Output.js","original":{"line":37,"column":16}},{"generated":{"line":28,"column":25},"source":"io/Output.js","original":{"line":37,"column":4}},{"generated":{"line":28,"column":27},"source":"io/Output.js","original":{"line":37,"column":25}},{"generated":{"line":29,"column":0},"source":"io/Output.js","original":{"line":37,"column":25}},{"generated":{"line":31,"column":0},"source":"io/Output.js","original":{"line":38,"column":8}},{"name":"source","generated":{"line":31,"column":9},"source":"io/Output.js","original":{"line":38,"column":13}},{"generated":{"line":31,"column":15},"source":"io/Output.js","original":{"line":38,"column":8}},{"name":"context","generated":{"line":31,"column":18},"source":"io/Output.js","original":{"line":38,"column":22}},{"generated":{"line":31,"column":25},"source":"io/Output.js","original":{"line":38,"column":29}},{"name":"destination","generated":{"line":31,"column":26},"source":"io/Output.js","original":{"line":38,"column":30}},{"generated":{"line":31,"column":37},"source":"io/Output.js","original":{"line":38,"column":8}},{"generated":{"line":31,"column":38},"source":"io/Output.js","original":{"line":37,"column":25}},{"generated":{"line":31,"column":39},"source":"io/Output.js","original":{"line":38,"column":43}},{"generated":{"line":33,"column":0},"source":"io/Output.js","original":{"line":39,"column":8}},{"name":"prev","generated":{"line":33,"column":9},"source":"io/Output.js","original":{"line":39,"column":13}},{"generated":{"line":33,"column":13},"source":"io/Output.js","original":{"line":39,"column":8}},{"generated":{"line":33,"column":16},"source":"io/Output.js","original":{"line":39,"column":20}},{"generated":{"line":33,"column":20},"source":"io/Output.js","original":{"line":39,"column":8}},{"generated":{"line":34,"column":0},"source":"io/Output.js","original":{"line":40,"column":5}},{"generated":{"line":35,"column":0},"source":"io/Output.js","original":{"line":42,"column":4}},{"generated":{"line":36,"column":0},"source":"io/Output.js","original":{"line":43,"column":0}},{"generated":{"line":37,"column":0},"source":"io/Output.js","original":{"line":44,"column":0}},{"generated":{"line":38,"column":0},"source":"io/Output.js","original":{"line":45,"column":0}},{"generated":{"line":39,"column":0},"source":"io/Output.js","original":{"line":46,"column":0}},{"generated":{"line":44,"column":31},"source":"io/Output.js","original":{"line":47,"column":15}},{"generated":{"line":45,"column":0},"source":"io/Output.js","original":{"line":48,"column":8}},{"generated":{"line":45,"column":13},"source":"io/Output.js","original":{"line":48,"column":15}},{"name":"source","generated":{"line":45,"column":18},"source":"io/Output.js","original":{"line":48,"column":20}},{"generated":{"line":45,"column":24},"source":"io/Output.js","original":{"line":48,"column":8}},{"generated":{"line":46,"column":0},"source":"io/Output.js","original":{"line":49,"column":5}},{"generated":{"line":47,"column":0},"source":"io/Output.js","original":{"line":51,"column":4}},{"generated":{"line":48,"column":0},"source":"io/Output.js","original":{"line":52,"column":0}},{"generated":{"line":49,"column":0},"source":"io/Output.js","original":{"line":53,"column":0}},{"generated":{"line":50,"column":0},"source":"io/Output.js","original":{"line":54,"column":0}},{"generated":{"line":51,"column":0},"source":"io/Output.js","original":{"line":55,"column":0}},{"name":"prev","generated":{"line":55,"column":28},"source":"io/Output.js","original":{"line":56,"column":12}},{"generated":{"line":55,"column":34},"source":"io/Output.js","original":{"line":56,"column":18}},{"generated":{"line":56,"column":0},"source":"io/Output.js","original":{"line":57,"column":8}},{"name":"prev","generated":{"line":56,"column":11},"source":"io/Output.js","original":{"line":57,"column":13}},{"generated":{"line":56,"column":15},"source":"io/Output.js","original":{"line":57,"column":8}},{"name":"prev","generated":{"line":56,"column":18},"source":"io/Output.js","original":{"line":57,"column":20}},{"generated":{"line":56,"column":22},"source":"io/Output.js","original":{"line":57,"column":8}},{"generated":{"line":57,"column":0},"source":"io/Output.js","original":{"line":58,"column":5}},{"generated":{"line":58,"column":0},"source":"io/Output.js","original":{"line":60,"column":4}},{"generated":{"line":59,"column":0},"source":"io/Output.js","original":{"line":61,"column":0}},{"generated":{"line":60,"column":0},"source":"io/Output.js","original":{"line":62,"column":0}},{"generated":{"line":61,"column":0},"source":"io/Output.js","original":{"line":63,"column":0}},{"generated":{"line":62,"column":0},"source":"io/Output.js","original":{"line":64,"column":0}},{"generated":{"line":63,"column":0},"source":"io/Output.js","original":{"line":65,"column":0}},{"name":"destination","generated":{"line":67,"column":28},"source":"io/Output.js","original":{"line":66,"column":12}},{"generated":{"line":67,"column":41},"source":"io/Output.js","original":{"line":66,"column":25}},{"generated":{"line":67,"column":42},"source":"io/Output.js","original":{"line":66,"column":27}},{"generated":{"line":68,"column":0},"source":"io/Output.js","original":{"line":68,"column":4}},{"generated":{"line":69,"column":0},"source":"io/Output.js","original":{"line":69,"column":0}},{"generated":{"line":70,"column":0},"source":"io/Output.js","original":{"line":70,"column":0}},{"generated":{"line":71,"column":0},"source":"io/Output.js","original":{"line":71,"column":0}},{"generated":{"line":75,"column":32},"source":"io/Output.js","original":{"line":72,"column":16}},{"generated":{"line":75,"column":33},"source":"io/Output.js","original":{"line":72,"column":18}},{"generated":{"line":76,"column":0},"source":"io/Output.js","original":{"line":74,"column":4}},{"generated":{"line":77,"column":0},"source":"io/Output.js","original":{"line":75,"column":0}},{"generated":{"line":78,"column":0},"source":"io/Output.js","original":{"line":76,"column":0}},{"generated":{"line":79,"column":0},"source":"io/Output.js","original":{"line":77,"column":0}},{"generated":{"line":80,"column":0},"source":"io/Output.js","original":{"line":78,"column":0}},{"generated":{"line":84,"column":33},"source":"io/Output.js","original":{"line":79,"column":17}},{"generated":{"line":84,"column":34},"source":"io/Output.js","original":{"line":79,"column":19}},{"name":"Output","generated":{"line":90,"column":15},"source":"io/Output.js","original":{"line":82,"column":15}}],"sources":{"io/Output.js":"// Copyright 2020 Armagan Amcalar. All Rights Reserved.\r\n//\r\n// This file is part of Pedalboard.js.\r\n//\r\n// Pedalboard.js is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Pedalboard.js is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Pedalboard.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @fileoverview Output abstraction for a given audio context. There can only be one output per audio context, and this\r\n * class is an abstraction of it that also implements the pb.Connectable interface so that it can be chained after\r\n * a pb.stomp.BoxModel.\r\n */\r\n\r\nimport IConnectable from \"../IConnectable\";\r\n\r\n/**\r\n * The output wrapper for an audio context.\r\n *\r\n * @implements {IConnectable}\r\n */\r\nclass Output {\r\n\r\n    /**\r\n     * \r\n     * @param {AudioContext} context Audio context for this output.\r\n     */\r\n    constructor(context) {\r\n        this.source = context.destination; // creates a sound source\r\n        this.prev = null;\r\n    }\r\n\r\n    /**\r\n     * Gets the destination node.\r\n     * @override\r\n     * @return {!(AudioNode|AudioParam)} The final node in the signal chain.\r\n     */\r\n    getInput() {\r\n        return this.source;\r\n    }\r\n\r\n    /**\r\n     * Lets the output know who is connected to it.\r\n     * @override\r\n     * @param {IConnectable} prev Input node.\r\n     */\r\n    setPrev(prev) {\r\n        this.prev = prev;\r\n    }\r\n\r\n    /**\r\n     * Dummy method for the Connectable interface. It's meaningless for an output to be connected to another Connectable.\r\n     * It's already the final node in the signal chain.\r\n     * \r\n     * @override\r\n     */\r\n    connect(destination) {}\r\n\r\n    /**\r\n     * Dummy method for the Connectable interface. It's meaningless for an output to have an output.\r\n     * @override\r\n     */\r\n    getOutput() {}\r\n\r\n    /**\r\n     * Dummy method for the Connectable interface. The output is never connected to anything else.\r\n     * \r\n     * @override\r\n     */\r\n    disconnect() {}\r\n}\r\n\r\nexport default Output;"},"lineCount":null}},"error":null,"hash":"aac7d4cc5e1040eb8eb4462435190717","cacheData":{"env":{}}}